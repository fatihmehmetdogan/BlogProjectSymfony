security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\LoginAuthenticator
                    - App\Security\UserLoginAuthenticator
                entry_point: App\Security\UserLoginAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/admin, roles: ROLE_READER }
#         - { path: ^/admin, roles: ROLE_BLOG_READER }
         - { path: ^/admin, roles: ROLE_ADMIN }

        # - { path: ^/profile, roles: ROLE_USER }
#
#    # config/packages/security.yaml
#    role_hierarchy:
#        ROLE_BLOG_READER:
#            - ROLE_SONATA_ADMIN_BLOG_LIST
#        ROLE_BLOG_EDITOR:
#            - ROLE_SONATA_ADMIN_BLOG_EDIT
#            - ROLE_SONATA_ADMIN_BLOG_DELETE
#
#        # those are the roles I will use (less verbose)
#        ROLE_ADMIN:  [ROLE_BLOG_READER, ROLE_BLOG_EDITOR ]
#        ROLE_READER: [ROLE_BLOG_READER]
#        ROLE_EDITOR: [ROLE_BLOG_EDITOR]
#
#    # set access_strategy to unanimous, else you may have unexpected behaviors
#    access_decision_manager:
#        strategy: unanimous
